
                                  Monolithic Vs Micro Service                              

   Monolithic application has single code base with multiple modules. Modules are divided as either for business features 
or technical features. It has single build system which build entire application and/or dependency. It also has single 
executable or deployable binary.

   Microservice architecture is an approach of building large enterprise application with multiple small unit called service, 
each service develop, deploy and test individually. Each service intercommunicate with a common communication protocol like 
REST web service with JSON. Each service run individually either in single machine or different machine but they execute its 
own separate process. Each service may have own database or storage system or they can share common database or storage system. Microservice is all about distribute or break application in small chunks.

Difficulties with monolithic application, when it grow  
1.Large monolithic code base makes complicated to understand, especially for new developer
2.Scaling become challenging
3.Continuously integration / deployment become complex and time consuming. You may require dedicated team for build and deploy
4.Overloaded IDE, Large code base makes IDE slow, build time increase.
5.Extremely difficult to change technology or language or framework because everything is tightly coupled and depend up on 
  each other.


Privilege with Microservice architecture, when it grow  
1.Each microservice is small and focused on a specific feature / business requirement.
2.Microservice can be developed independently by small team of developers (normally 2 to 5 developers).
3.Microservice is loosely coupled, means services are independent, in terms of development and deployment both.
4.Microservice can be developed using different programming language (Personally I don't suggest to do it).
5.Microservice allows easy and flexible way to integrate automatic deployment with Continuous Integration tools 
(for e.g: Jenkins, Hudson, bamboo etc..). The productivity of a new team member will be quick enough.
6.Microservice allows you to take advantage of emerging and latest technologies (framework, programming language, 
programming practice, etc.).
Microservice is easy to scale based on demand. In a nutshell, monolithic vs microservice architecture is like elephant vs ant approach. What you wants to build a giant system like elephant or army of ant, small, fast and effective.